@page "/events"
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components


<h3>Lista de Eventos</h3>

<!-- Formulario para agregar eventos -->
<EditForm Model="@newEvent" OnValidSubmit="AddEvent">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Nombre del Evento:</label>
        <InputText @bind-Value="newEvent.Name" />
        <ValidationMessage For="@(() => newEvent.Name)" />
    </div>

    <div>
        <label>Fecha:</label>
        <InputDate @bind-Value="newEvent.Date" />
        <ValidationMessage For="@(() => newEvent.Date)" />
    </div>

    <div>
        <label>Ubicación:</label>
        <InputText @bind-Value="newEvent.Location" />
        <ValidationMessage For="@(() => newEvent.Location)" />
    </div>

    <button type="submit">Agregar Evento</button>
</EditForm>

<!-- Mensaje de éxito o error -->
@if (!string.IsNullOrEmpty(message))
{
    <p>@message</p>
}

<!-- Lista de Eventos usando foreach -->
@if (events.Any())
{
    <div>
        @foreach (var eventItem in events)
        {
            <EventCard Name="@eventItem.Name" Date="@eventItem.Date" Location="@eventItem.Location" />
            <a href="/event-details/@eventItem.Id">Ver Detalles</a>
        }
    </div>
}
else
{
    <p>No hay eventos disponibles.</p>
}

@code {
    private List<EventModel> events = new List<EventModel>();
    private EventModel newEvent = new EventModel();
    private string? message;

    private void AddEvent()
    {
        if (string.IsNullOrWhiteSpace(newEvent.Name) || string.IsNullOrWhiteSpace(newEvent.Location))
        {
            message = "Todos los campos son obligatorios.";
            return;
        }

        // Agregar evento a la lista manualmente
        events.Add(new EventModel
        {
            Id = events.Count + 1,
            Name = newEvent.Name,
            Date = newEvent.Date,
            Location = newEvent.Location
        });

        // Reiniciar el formulario
        newEvent = new EventModel();
        message = "Evento agregado correctamente.";
    }
}
