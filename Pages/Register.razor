@page "/register"
@using System.ComponentModel.DataAnnotations

<h3>Registro de Usuario</h3>

<EditForm Model="@newUser" OnValidSubmit="RegisterUser">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Nombre Completo:</label>
        <InputText @bind-Value="newUser.FullName" />
        <ValidationMessage For="@(() => newUser.FullName)" />
    </div>

    <div>
        <label>Correo Electrónico:</label>
        <InputText @bind-Value="newUser.Email" type="email" />
        <ValidationMessage For="@(() => newUser.Email)" />
    </div>

    <div>
        <label>Contraseña:</label>
        <InputText @bind-Value="newUser.Password" type="password" />
        <ValidationMessage For="@(() => newUser.Password)" />
    </div>

    <div>
        <label>Confirmar Contraseña:</label>
        <InputText @bind-Value="newUser.ConfirmPassword" type="password" />
        <ValidationMessage For="@(() => newUser.ConfirmPassword)" />
    </div>

    <button type="submit">Registrarse</button>
</EditForm>

@if (!string.IsNullOrEmpty(message))
{
    <p>@message</p>
}

@code {
    private UserModel newUser = new();
    private string? message;

    private void RegisterUser()
    {
        if (string.IsNullOrWhiteSpace(newUser.FullName) ||
            string.IsNullOrWhiteSpace(newUser.Email) ||
            string.IsNullOrWhiteSpace(newUser.Password))
        {
            message = "Todos los campos son obligatorios.";
            return;
        }

        if (newUser.Password != newUser.ConfirmPassword)
        {
            message = "Las contraseñas no coinciden.";
            return;
        }

        message = $"Usuario {newUser.FullName} registrado exitosamente.";
        newUser = new UserModel(); // Reinicia el formulario
    }

    public class UserModel
    {
        [Required(ErrorMessage = "El nombre es obligatorio")]
        public string FullName { get; set; } = string.Empty;

        [Required(ErrorMessage = "El correo electrónico es obligatorio")]
        [EmailAddress(ErrorMessage = "Formato de correo inválido")]
        public string Email { get; set; } = string.Empty;

        [Required(ErrorMessage = "La contraseña es obligatoria")]
        [MinLength(6, ErrorMessage = "Debe tener al menos 6 caracteres")]
        public string Password { get; set; } = string.Empty;

        [Required(ErrorMessage = "Debe confirmar la contraseña")]
        [Compare("Password", ErrorMessage = "Las contraseñas no coinciden")]
        public string ConfirmPassword { get; set; } = string.Empty;
    }
}
